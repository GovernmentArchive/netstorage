<?php

/**
 * @file
 * Utilities for working with Akamai NetStorage.
 */

/**
 * Implements hook_cron_queue_info().
 */
function netstorage_cron_queue_info() {
  $queues['netstorage_upload'] = array(
    'worker callback' => 'netstorage_upload',
    'time' => 60,
    'skip on cron' => TRUE,
  );
  return $queues;
}

/**
 * Implements hook_tweetfetch().
 *
 * Queues upload tasks.
 */
function netstorage_tweetfetch($filepath) {
  $data = new stdClass();
  $data->filepath = $filepath;
  $data->subdir = 'tweets';

  $queue = DrupalQueue::get('netstorage_upload');
  $queue->createQueue();
  $queue->createItem($data);
}

/**
 * Implements hook_tweetfetch_reset().
 *
 * Refresh Akamai cache on reset.
 */
function netstorage_tweetfetch_reset($paths) {
  if (!is_array($paths)) {
    $paths = array($paths);
  }

  try {
    $akamai = akamai_get_class();
    $akamai->clear_url($paths);
  }
  catch(Exception $e) {
    watchdog('netstorage_upload', 'Could not clear Akamai cache', WATCHDOD_ERRORs);
  }
}

/**
 * Worker callback for netstorage_upload queue in hook_cron_queue_info.
 *
 * @param obj $upload
 *  - filepath, absolute path to file
 *  - subdir, subdirectory on netstorage
 */
function netstorage_upload($upload) {
  if (!drupal_is_cli()) {
    drupal_set_message('Sorry. This netstorage_upload can only be run via `drush queue-run netstorage_upload`.', 'error');
    return;
  }
  else {
    $context = drush_get_context($context);
    $is_verbose = $context['DRUSH_VERBOSE'];
  }

  // Get upload command.
  $command = netstorage_get_scp_command($upload->filepath, $upload->subdir);
  $command .= ' 2>&1';

  // Execute.
  $message = "Running: {$command}";
  watchdog('netstorage_upload', $message);
  if (!$is_verbose) drupal_set_message($message);
  $output = shell_exec($command);

  // Report output.
  $message = "Output: {$output}";
  watchdog('netstorage_upload', $message);
  if (!$is_verbose) drupal_set_message($message);

  // @todo Once this runs, Drupal has already removed this item from the queue.
  //    Re-queue item here if upload fails.

}

/**
 * Generate scp command to push files up to NetStorage.
 */
function netstorage_get_scp_command($filepath, $subdir = '') {
  // Make sure variables aren't missing.
  if (!$netstorage_credentials = netstorage_get_credentials()) {
    throw new Exception('Missing netstorage_credentials.');  
  }

  // Get SCP command.
  $command =  _netstorage_get_scp_command($filepath, $netstorage_credentials, $subdir);

  return $command;
}

/**
 * Get credentials.
 *
 * @return array
 */
function netstorage_get_credentials() {
  // Make sure variables aren't missing.
  if (!$netstorage_credentials = variable_get('netstorage_credentials', FALSE)) {
    drupal_set_message('Missing netstorage_credentials. See netstorage/README.', 'error');
    return;
  }
  else {
    return $netstorage_credentials;  
  }
}

/**
 * Call this for Drush commands updating NetStorage for individual files.
 *
 * scp -i /path/to/key/file /path/to/local/file user@host:/path/to/directory
 *
 * @param string $filepath
 *  Absolute path to file.
 *
 * @param array $netstorage_credentials
 *   An array of NetStorage rsync variables containing the follow key-value
 *   pairs:
 *   - "%key_file": The path to your NetStorage key file.
 *   - "%user": Your NetStorage username.
 *   - "%customer": Your NetStorage customer name.
 *   - "%cp_code": Your CP code provided by Akamai.
 *   - "%netstorage_upload_path": The Netstorage upload path.
 *
 * @param string $subdir
 *   (optional) Subdirectory inside top-level directory to scp up to.
 *
 * @return string
 *   Commands to execute to manually run NetStorage update for a single file.
 *
 * @see drush_netstorage_get_sync_command()
 */
function _netstorage_get_scp_command($filename, $netstorage_credentials, $subdir = '') {
  $variables = array_merge($netstorage_credentials, array('%filename' => $filename,
                                                          '%subdir' => $subdir));

  // Generate the scp command.
  if ($destination = variable_get('netstorage_test_destination', FALSE)) {
    // This is a test. We're not actually scp-ing the file up to NetStorage.
    $command = "scp {$filename} {$destination}";
    drupal_set_message('netstorage', 'NOTE: This is a test destination. To upload to NetStorage using credentials in settings.php run `drush netstorage-unset-test-destination`');
  }
  else {
    $command = strtr("scp -i %key_file %filename %user@%customer.upload.akamai.com:/%cp_code/%netstorage_upload_path/%subdir", $variables);
  }

  return $command;
}
